{"version":3,"sources":["components/WeatherIcon.js","components/SmallCards/SmallCard.js","components/SmallCards/SmallCardList.js","components/WeatherCard.js","components/WeatherForm.js","components/Weather.js","App.js","reportWebVitals.js","index.js"],"names":["WeatherIcon","icon","size","SmallCard","city","cityClicked","removeCity","cityList","apiKey","process","useState","name","setName","temp","setTemp","setIcon","useEffect","fetch","then","res","json","data","cod","localStorage","setItem","JSON","stringify","filter","e","main","weather","catch","err","console","log","className","onClick","SmallCardList","map","WeatherCard","description","WeatherForm","submitHandler","inputValue","setInputValue","onSubmit","type","value","placeholder","onChange","target","API_URL","Weather","parse","getItem","setCity","cityOnCard","setCityOnCard","setDescription","setCityList","a","updateData","preventDefault","indexOf","length","preCityList","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bb89757a.chunk.js","sourcesContent":["import {\r\n  WiCloudy,\r\n  WiDayCloudy,\r\n  WiDayCloudyHigh,\r\n  WiDayLightWind,\r\n  WiDayRain,\r\n  WiDayShowers,\r\n  WiDaySnowThunderstorm,\r\n  WiDaySunny,\r\n  WiNightAltCloudy,\r\n  WiNightAltThunderstorm,\r\n  WiNightClear,\r\n  WiNightPartlyCloudy,\r\n  WiNightRain,\r\n  WiNightShowers,\r\n  WiStrongWind,\r\n} from 'react-icons/wi';\r\n\r\nconst WeatherIcon = ({ icon, size }) => {\r\n  switch (icon) {\r\n    case '01d':\r\n      return <WiDaySunny size={size} />;\r\n    case '01n':\r\n      return <WiNightClear size={size} />;\r\n    case '02d':\r\n      return <WiDayCloudy size={size} />;\r\n    case '02n':\r\n      return <WiNightPartlyCloudy size={size} />;\r\n    case '03d':\r\n      return <WiDayCloudyHigh size={size} />;\r\n    case '03n':\r\n      return <WiNightAltCloudy size={size} />;\r\n    case '04d':\r\n      return <WiCloudy size={size} />;\r\n    case '04n':\r\n      return <WiCloudy size={size} />;\r\n    case '09d':\r\n      return <WiDayShowers size={size} />;\r\n    case '09n':\r\n      return <WiNightShowers size={size} />;\r\n    case '10d':\r\n      return <WiDayRain size={size} />;\r\n    case '10n':\r\n      return <WiNightRain size={size} />;\r\n    case '11d':\r\n      return <WiDaySnowThunderstorm size={size} />;\r\n    case '11n':\r\n      return <WiNightAltThunderstorm size={size} />;\r\n    case '50d':\r\n      return <WiDayLightWind size={size} />;\r\n    case '50n':\r\n      return <WiStrongWind />;\r\n    default:\r\n      return null;\r\n  }\r\n};\r\n\r\nexport default WeatherIcon;\r\n","import { useState, useEffect } from 'react';\r\nimport WeatherIcon from '../WeatherIcon';\r\nimport { IoCloseCircle } from 'react-icons/io5';\r\n\r\nconst SmallCard = ({ city, cityClicked, removeCity, cityList }) => {\r\n  const API_URL = 'https://api.openweathermap.org/data/2.5/weather?q=';\r\n  const apiKey = process.env.REACT_APP_WEATHER_API_KEY;\r\n  const [name, setName] = useState('');\r\n  const [temp, setTemp] = useState('');\r\n  const [icon, setIcon] = useState('');\r\n\r\n  useEffect(() => {\r\n    fetch(`${API_URL}${city}&appid=${apiKey}&units=metric&lang=fa`)\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        if (data.cod === '404') {\r\n          localStorage.setItem(\r\n            'cityList',\r\n            JSON.stringify(cityList.filter(e => e !== city))\r\n          );\r\n        }\r\n        setName(data.name);\r\n        setTemp(data.main.temp);\r\n        setIcon(data.weather[0].icon);\r\n      })\r\n      .catch(err => console.log(err));\r\n  }, [city, apiKey, cityList]);\r\n\r\n  if (!temp) {\r\n    return '';\r\n  }\r\n\r\n  return (\r\n    <div className='relative'>\r\n      <span\r\n        onClick={() => removeCity(city)}\r\n        className='absolute -top-2 -right-2 text-red-600 text-4xl cursor-pointer'\r\n      >\r\n        <IoCloseCircle />\r\n      </span>\r\n      <div\r\n        onClick={() => cityClicked(city)}\r\n        className='bg-white w-40 md:w-52 border-blue-400 dark:bg-gray-800 bg-opacity-60 border-opacity-60 | p-2 border-solid rounded-3xl border | flex justify-around cursor-pointer | hover:bg-blue-200 dark:hover:bg-indigo-600 hover:border-blue-600 | transition-colors duration-500'\r\n      >\r\n        <div className='pt-2'>\r\n          <WeatherIcon\r\n            className='w-16 h-16 object-cover'\r\n            size='55px'\r\n            icon={icon}\r\n          />\r\n        </div>\r\n        <div className='flex flex-col justify-center'>\r\n          <p className='text-gray-900 dark:text-gray-300 font-semibold'>\r\n            {name}\r\n          </p>\r\n          <p className='text-black dark:text-gray-100 text-justify font-semibold'>\r\n            {temp}\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SmallCard;\r\n","import SmallCard from './SmallCard';\r\n\r\nconst SmallCardList = ({ cityList, cityClicked, removeCity }) => {\r\n  return (\r\n    <div className=' absolute flex justify-center py-10'>\r\n      <div className='grid lg:grid-cols-4 md:grid-cols-3 grid-cols-2 gap-4'>\r\n        {cityList.map(city => (\r\n          <SmallCard\r\n            key={city}\r\n            city={city}\r\n            cityClicked={cityClicked}\r\n            cityList={cityList}\r\n            removeCity={removeCity}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SmallCardList;\r\n","import WeatherIcon from './WeatherIcon';\r\n\r\nconst WeatherCard = ({ icon, city, description, temp }) => {\r\n  return (\r\n    <div className='absolute w-80 border border-green-600 bg-gradient-to-b from-blue-100 via-white to-green-50 rounded-3xl flex flex-col justify-center items-center text-center p-6 bg-white'>\r\n      <div className='text-md font-bold flex flex-col text-gray-900'>\r\n        <span className='text-2xl'>{city}</span>\r\n      </div>\r\n      <div className='w-32 h-32 flex items-center justify-center'>\r\n        <WeatherIcon size='150px' icon={icon} />\r\n      </div>\r\n      <p className='text-gray-700 mb-2'>{description}</p>\r\n      <p className='mx-1 text-4xl font-bold mb-3'>{temp}º</p>\r\n      <div className='flex justify-between w-full'>\r\n        <div className='flex items-center text-gray-700 px-2'>\r\n          <h1>svg here</h1>\r\n          100 l/m<sup>2</sup>\r\n        </div>\r\n        <div className='flex items-center text-gray-700 px-2'>\r\n          <h1>icon here</h1>\r\n          20 km/h\r\n        </div>\r\n      </div>\r\n      ;\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WeatherCard;\r\n","const WeatherForm = ({ submitHandler, inputValue, setInputValue }) => {\r\n  return (\r\n    <div className='absolute my-5 block m-auto text-center md:px-36'>\r\n      <form onSubmit={submitHandler}>\r\n        <input\r\n          type='text'\r\n          value={inputValue}\r\n          placeholder='نام شهر را وارد کنید'\r\n          onChange={e => setInputValue(e.target.value)}\r\n          className='text-right py-3 px-16 border border-green-600 rounded-full outline-none |  hover:border-blue-300 | transition duration-200'\r\n        />\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WeatherForm;\r\n","import { useState, useEffect } from 'react';\r\nimport SmallCardList from './SmallCards/SmallCardList';\r\nimport WeatherCard from './WeatherCard';\r\nimport WeatherForm from './WeatherForm';\r\n\r\nconst API_URL = 'https://api.openweathermap.org/data/2.5/weather?q=';\r\nconst apiKey = process.env.REACT_APP_WEATHER_API_KEY;\r\n\r\nfunction Weather() {\r\n  const [city, setCity] = useState(\r\n    JSON.parse(localStorage.getItem('selectedCity')) || 'تهران'\r\n  );\r\n  const [cityOnCard, setCityOnCard] = useState('');\r\n  const [temp, setTemp] = useState(null);\r\n  const [description, setDescription] = useState('');\r\n  const [icon, setIcon] = useState(null);\r\n  const [cityList, setCityList] = useState(\r\n    JSON.parse(localStorage.getItem('cityList')) || [\r\n      'تهران',\r\n      'مشهد',\r\n      'اصفهان',\r\n      'شیراز',\r\n    ]\r\n  );\r\n  const [inputValue, setInputValue] = useState('');\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('selectedCity', JSON.stringify(city));\r\n    async function updateData() {\r\n      const res = await fetch(\r\n        `${API_URL}${city}&appid=${apiKey}&units=metric&lang=fa`\r\n      );\r\n      const data = await res.json();\r\n      if (data.main) {\r\n        setCityOnCard(data.name);\r\n        setTemp(data.main.temp);\r\n        setDescription(data.weather[0].description);\r\n        setIcon(data.weather[0].icon);\r\n      }\r\n      return;\r\n    }\r\n    updateData();\r\n  }, [city]);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('cityList', JSON.stringify(cityList));\r\n  }, [cityList]);\r\n\r\n  const submitHandler = e => {\r\n    e.preventDefault();\r\n    setCity(inputValue);\r\n\r\n    if (cityList.indexOf(inputValue) === -1 && inputValue.length > 0) {\r\n      setCityList(preCityList => [...preCityList, inputValue]);\r\n    }\r\n\r\n    setInputValue('');\r\n  };\r\n\r\n  const cityClicked = e => {\r\n    setCity(e);\r\n  };\r\n\r\n  const removeCity = e => {\r\n    setCityList(cityList.filter(city => e !== city));\r\n  };\r\n\r\n  return (\r\n    <div className='min-h-screen flex flex-col bg-gradient-to-b from-blue-200 via-white  to-green-200'>\r\n      {cityList && (\r\n        <SmallCardList\r\n          cityList={cityList}\r\n          cityClicked={cityClicked}\r\n          removeCity={removeCity}\r\n        />\r\n      )}\r\n      <WeatherForm\r\n        submitHandler={submitHandler}\r\n        setInputValue={setInputValue}\r\n        inputValue={inputValue}\r\n      />\r\n      <div className='flex justify-center'>\r\n        {cityOnCard && (\r\n          <WeatherCard\r\n            icon={icon}\r\n            city={cityOnCard}\r\n            temp={temp}\r\n            description={description}\r\n          />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Weather;\r\n","import Weather from './components/Weather';\n\nfunction App() {\n  return (\n    <div className='App'>\n      <Weather />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}